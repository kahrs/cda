Grammar

    0 $accept: file $end

    1 file: s
    2     | file s

    3 s: OTHER NAME
    4  | OTHER NUMBER
    5  | OUTPUT decl deplist implist
    6  | OUTPUT decl implist
    7  | OUTPUT decl
    8  | XOR decl deplist

    9 decl: NAME
   10     | decl INV
   11     | decl DFF
   12     | decl TOG
   13     | decl LATCH
   14     | decl INT
   15     | decl ENAB
   16     | decl CKEN
   17     | decl RESET
   18     | decl PRESET

   19 deplist: NAME
   20        | deplist NAME

   21 imp: NUMBER ':' NUMBER

   22 implist: imp
   23        | imp implist


Terminals, with rules where they appear

$end (0) 0
':' (58) 21
error (256)
OUTPUT (258) 5 6 7
XOR (259) 8
OTHER (260) 3 4
INV (261) 10
DFF (262) 11
TOG (263) 12
INT (264) 14
ENAB (265) 15
CKEN (266) 16
RESET (267) 17
LATCH (268) 13
PRESET (269) 18
NUMBER (270) 4 21
NAME (271) 3 9 19 20


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
file (19)
    on left: 1 2, on right: 0 2
s (20)
    on left: 3 4 5 6 7 8, on right: 1 2
decl (21)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 5 6 7 8 10 11
    12 13 14 15 16 17 18
deplist (22)
    on left: 19 20, on right: 5 8 20
imp (23)
    on left: 21, on right: 22 23
implist (24)
    on left: 22 23, on right: 5 6 23


state 0

    0 $accept: . file $end

    OUTPUT  shift, and go to state 1
    XOR     shift, and go to state 2
    OTHER   shift, and go to state 3

    file  go to state 4
    s     go to state 5


state 1

    5 s: OUTPUT . decl deplist implist
    6  | OUTPUT . decl implist
    7  | OUTPUT . decl

    NAME  shift, and go to state 6

    decl  go to state 7


state 2

    8 s: XOR . decl deplist

    NAME  shift, and go to state 6

    decl  go to state 8


state 3

    3 s: OTHER . NAME
    4  | OTHER . NUMBER

    NUMBER  shift, and go to state 9
    NAME    shift, and go to state 10


state 4

    0 $accept: file . $end
    2 file: file . s

    $end    shift, and go to state 11
    OUTPUT  shift, and go to state 1
    XOR     shift, and go to state 2
    OTHER   shift, and go to state 3

    s  go to state 12


state 5

    1 file: s .

    $default  reduce using rule 1 (file)


state 6

    9 decl: NAME .

    $default  reduce using rule 9 (decl)


state 7

    5 s: OUTPUT decl . deplist implist
    6  | OUTPUT decl . implist
    7  | OUTPUT decl .
   10 decl: decl . INV
   11     | decl . DFF
   12     | decl . TOG
   13     | decl . LATCH
   14     | decl . INT
   15     | decl . ENAB
   16     | decl . CKEN
   17     | decl . RESET
   18     | decl . PRESET

    INV     shift, and go to state 13
    DFF     shift, and go to state 14
    TOG     shift, and go to state 15
    INT     shift, and go to state 16
    ENAB    shift, and go to state 17
    CKEN    shift, and go to state 18
    RESET   shift, and go to state 19
    LATCH   shift, and go to state 20
    PRESET  shift, and go to state 21
    NUMBER  shift, and go to state 22
    NAME    shift, and go to state 23

    $default  reduce using rule 7 (s)

    deplist  go to state 24
    imp      go to state 25
    implist  go to state 26


state 8

    8 s: XOR decl . deplist
   10 decl: decl . INV
   11     | decl . DFF
   12     | decl . TOG
   13     | decl . LATCH
   14     | decl . INT
   15     | decl . ENAB
   16     | decl . CKEN
   17     | decl . RESET
   18     | decl . PRESET

    INV     shift, and go to state 13
    DFF     shift, and go to state 14
    TOG     shift, and go to state 15
    INT     shift, and go to state 16
    ENAB    shift, and go to state 17
    CKEN    shift, and go to state 18
    RESET   shift, and go to state 19
    LATCH   shift, and go to state 20
    PRESET  shift, and go to state 21
    NAME    shift, and go to state 23

    deplist  go to state 27


state 9

    4 s: OTHER NUMBER .

    $default  reduce using rule 4 (s)


state 10

    3 s: OTHER NAME .

    $default  reduce using rule 3 (s)


state 11

    0 $accept: file $end .

    $default  accept


state 12

    2 file: file s .

    $default  reduce using rule 2 (file)


state 13

   10 decl: decl INV .

    $default  reduce using rule 10 (decl)


state 14

   11 decl: decl DFF .

    $default  reduce using rule 11 (decl)


state 15

   12 decl: decl TOG .

    $default  reduce using rule 12 (decl)


state 16

   14 decl: decl INT .

    $default  reduce using rule 14 (decl)


state 17

   15 decl: decl ENAB .

    $default  reduce using rule 15 (decl)


state 18

   16 decl: decl CKEN .

    $default  reduce using rule 16 (decl)


state 19

   17 decl: decl RESET .

    $default  reduce using rule 17 (decl)


state 20

   13 decl: decl LATCH .

    $default  reduce using rule 13 (decl)


state 21

   18 decl: decl PRESET .

    $default  reduce using rule 18 (decl)


state 22

   21 imp: NUMBER . ':' NUMBER

    ':'  shift, and go to state 28


state 23

   19 deplist: NAME .

    $default  reduce using rule 19 (deplist)


state 24

    5 s: OUTPUT decl deplist . implist
   20 deplist: deplist . NAME

    NUMBER  shift, and go to state 22
    NAME    shift, and go to state 29

    imp      go to state 25
    implist  go to state 30


state 25

   22 implist: imp .
   23        | imp . implist

    NUMBER  shift, and go to state 22

    $default  reduce using rule 22 (implist)

    imp      go to state 25
    implist  go to state 31


state 26

    6 s: OUTPUT decl implist .

    $default  reduce using rule 6 (s)


state 27

    8 s: XOR decl deplist .
   20 deplist: deplist . NAME

    NAME  shift, and go to state 29

    $default  reduce using rule 8 (s)


state 28

   21 imp: NUMBER ':' . NUMBER

    NUMBER  shift, and go to state 32


state 29

   20 deplist: deplist NAME .

    $default  reduce using rule 20 (deplist)


state 30

    5 s: OUTPUT decl deplist implist .

    $default  reduce using rule 5 (s)


state 31

   23 implist: imp implist .

    $default  reduce using rule 23 (implist)


state 32

   21 imp: NUMBER ':' NUMBER .

    $default  reduce using rule 21 (imp)
